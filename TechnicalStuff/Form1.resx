<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAA
</value>
  </data>
</root>